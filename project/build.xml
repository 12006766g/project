<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="jar" name="project">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="../../../20000_MySharedApplications/eclipse/" />
	<property name="junit.output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<!-- Variable -->
	<property name="build.dir" location="target/classes" />
	<property name="dist.dir" location="dist" />
	<property name="docs.dir" location="docs" />
	<property name="src.dir" location="src" />   

	<path id="JUnit 4.libraryclasspath">
		<pathelement location="${ECLIPSE_HOME}plugins/org.junit_4.11.0.v201303080030/junit.jar" />
		<pathelement location="${ECLIPSE_HOME}plugins/org.hamcrest.core_1.3.0.v201303031735.jar" />
	</path>

	<path id="mvn.libraryclasspath">
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/plugins/maven-surefire-plugin/2.18.1/maven-surefire-plugin-2.18.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-plugin-api/2.2.1/maven-plugin-api-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/surefire/maven-surefire-common/2.18.1/maven-surefire-common-2.18.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/surefire/surefire-booter/2.18.1/surefire-booter-2.18.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-artifact/2.2.1/maven-artifact-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.15/plexus-utils-1.5.15.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-plugin-descriptor/2.2.1/maven-plugin-descriptor-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-project/2.2.1/maven-project-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-settings/2.2.1/maven-settings-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-profile/2.2.1/maven-profile-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-artifact-manager/2.2.1/maven-artifact-manager-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-plugin-registry/2.2.1/maven-plugin-registry-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.11/plexus-interpolation-1.11.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-model/2.2.1/maven-model-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-core/2.2.1/maven-core-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-plugin-parameter-documenter/2.2.1/maven-plugin-parameter-documenter-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/wagon/wagon-http/1.0-beta-6/wagon-http-1.0-beta-6.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/wagon/wagon-http-shared/1.0-beta-6/wagon-http-shared-1.0-beta-6.jar"/>
        <pathelement location="${user.home}/.m2/repository/nekohtml/xercesMinimal/1.9.6.2/xercesMinimal-1.9.6.2.jar"/>
        <pathelement location="${user.home}/.m2/repository/nekohtml/nekohtml/1.9.6.2/nekohtml-1.9.6.2.jar"/>
        <pathelement location="${user.home}/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/wagon/wagon-webdav-jackrabbit/1.0-beta-6/wagon-webdav-jackrabbit-1.0-beta-6.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/jackrabbit/jackrabbit-webdav/1.5.0/jackrabbit-webdav-1.5.0.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/jackrabbit/jackrabbit-jcr-commons/1.5.0/jackrabbit-jcr-commons-1.5.0.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.6/jcl-over-slf4j-1.5.6.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.2.1/maven-reporting-api-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.1/doxia-logging-api-1.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-6/wagon-provider-api-1.0-beta-6.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-repository-metadata/2.2.1/maven-repository-metadata-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-error-diagnostics/2.2.1/maven-error-diagnostics-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-monitor/2.2.1/maven-monitor-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/classworlds/classworlds/1.1/classworlds-1.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/surefire/surefire-api/2.18.1/surefire-api-2.18.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/maven-toolchain/2.2.1/maven-toolchain-2.2.1.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/apache/maven/plugin-tools/maven-plugin-annotations/3.3/maven-plugin-annotations-3.3.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/slf4j/slf4j-nop/1.7.10/slf4j-nop-1.7.10.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/slf4j/slf4j-api/1.7.10/slf4j-api-1.7.10.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/slf4j/slf4j-jdk14/1.7.10/slf4j-jdk14-1.7.10.jar"/>
        <pathelement location="${user.home}/.m2/repository/com/miglayout/miglayout-swing/4.2/miglayout-swing-4.2.jar"/>
        <pathelement location="${user.home}/.m2/repository/com/miglayout/miglayout-core/4.2/miglayout-core-4.2.jar"/>
        <pathelement location="${user.home}/.m2/repository/junit/junit/4.11/junit-4.11.jar"/>
        <pathelement location="${user.home}/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"/>
	</path>	
	<path id="project.classpath">
		<pathelement location="target/classes" />
		<pathelement location="target/test-classes" />
		<path refid="mvn.libraryclasspath" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>	
	
	
	<target depends="jar" name="build" />
	<target name="build-subprojects" />

	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>
	<target name="GridBrowserTest">
		<java classname="com.mph.tests.misc.GridBrowserTest" failonerror="true" fork="yes">
			<classpath refid="run.GridBrowserTest.classpath" />
		</java>
	</target>
	<target name="InitializerImpl">
		<java classname="com.mph.systems.impls.InitializerImpl" failonerror="true" fork="yes">
			<classpath refid="run.InitializerImpl.classpath" />
		</java>
	</target>
	<target name="project (1)">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="com.mph.TestSuit" todir="${junit.output.dir}" />
			<test name="com.mph.daos.impls.InventoryMasterDaoImplUTest" todir="${junit.output.dir}" />
			<test name="com.mph.services.impls.InventoryMasterMgrImplUTest" todir="${junit.output.dir}" />
			<classpath refid="run.project (1).classpath" />
		</junit>
	</target>
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>	
	
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${docs.dir}" />				
		<delete dir="target/classes" />
		<delete dir="target/test-classes" />
	</target>
	<target depends="clean" name="cleanall" />	
	<target depends="cleanall" name="init">
		<mkdir dir="target/classes" />
		<mkdir dir="target/test-classes" />
		<mkdir dir="target/classes" />
		<mkdir dir="${dist.dir}/libs" />
		
       	<copy todir="${build.dir}/libs" flatten="true"> 
       		<path> <path refid="project.classpath"/></path>
        </copy>
		
       	<copy todir="${dist.dir}/libs" flatten="true"> 
       		<path> <path refid="project.classpath"/></path>
        </copy>		
		<!--
		<copy includeemptydirs="false" todir="${dist.dir}">
			<fileset dir="src/main/resources">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
				<include name="**" />
			</fileset>
		</copy>	-->
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="src/main/java">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="src/main/resources">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
				<include name="**" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/test-classes">
			<fileset dir="src/test/java">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="target/test-classes">
			<fileset dir="src/test/resources">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
				<exclude name="**" />
			</fileset>
		</copy>
	</target>
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />

		<javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="true" source="${source}" target="${target}" classpathref="project.classpath">
			<src path="src/main/java" />
			<src path="src/main/resources" />
			<classpath refid="project.classpath" />
			<include name="**" />
		</javac> 
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" includeantruntime="true" source="${source}" target="${target}">
			<src path="src/test/java" />
			<src path="src/test/resources" />
			<classpath refid="project.classpath" />
			<include name="**" />
		</javac>
		<!--
	      <javac srcdir="${src.dir}" destdir="${build.dir}" debug="on">
	      	<classpath refid="project.classpath"/>
	      	<compilerarg value="-Xlint:unchecked"/>	      	
	      </javac>
	      -->	
	</target>	
	<!-- Creates the deployable jar file -->
	<path id="build.classpath">
	  <fileset dir="${dist.dir}">
	     <include name="libs/*.jar"/>
	  </fileset>
	</path>	
	
	<pathconvert property="manifest.classpath" pathsep=" ">
	  <path refid="build.classpath"/>
	  <mapper>
	    <chainedmapper>
	       <flattenmapper/>
	       <globmapper from="*.jar" to="libs/*.jar"/>
	    </chainedmapper>
	  </mapper>
	</pathconvert>
	
	<target name="jar" depends="build-project">		
		<jar destfile="${dist.dir}/project.jar" basedir="${build.dir}" >
			<manifest>
				<attribute name="Main-Class" value="com.mph.systems.impls.InitializerImpl" />
				<attribute name="Class-Path" value="project.jar ${manifest.classpath}"/>
			</manifest>
		</jar>
		<echo message="Manifest Classpath: project.jar ${manifest.classpath}" />
	</target>	
</project>
